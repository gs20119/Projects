
<POI 2013 번역>
사진은 없습니다..

I-1. Price List
Descriptions
깅곽민국의 사람들은 서로 먼 도시에서 도시로 이동할 때 대개 고속철도를 사용한다. 
깅곽민국은 총 N개의 도시와 지하에서 도시 둘을 잇는 노선 M개로 이루어져 있다.
노선은 양방향이고, 하나의 노선을 이용하려면 A원을 지불해야 한다.

그런데, 최근에 나라에서 고속버스 제도를 새롭게 도입하면서 상황이 달라졌다.
고속버스는 노선 별 운행경로가 생각보다 짧고 환승이 잦던 
고속철도 시스템을 개편하기 위해 만들어졌고,   

Input

Output
Restrictions
Example

I-2. Tapestries

Descriptions
Input
Output
Restrictions
Example

I-3. Multidrink
Descriptions
코포가 없어 심심했던 최진우는 돈을 벌기 위해 우유 배달을 하기로 한다.
마을 지도에는 배달해야 할 N개의 주택과 집과 집 사이의 양방향 도로 N-1개가 써져 있다.
어떤 경우에도 중복 없이 한 주택에서 다른 주택으로 갈 수 있는 경로는 하나 뿐이다.
1번부터 N번까지 모든 주택을 돌아다니면서 우유를 배달하면 되고, 순서는 상관없다.  
대신, 배달 루트의 출발지와 목적지는 각각 1번과 N번으로 정해져 있다.

시급을 짜게 주는 사장에게 불만이 있었는지 
배달 루트가 마음에 들지 않으면 내일부터 다른 알바를 찾아보기로 결심했다.
최진우는 아무런 결실 없는 이동을 싫어하기 때문에 
한 주택에 배달할 때마다 방문하지 않은 다른 주택이 도로 2칸 이내에 있어야 한다. 

우유 배달 알바를 그냥 그만두기 미안했는지
진우는 최선을 다해 마음에 드는 배달 루트를 찾아보기로 한다.
머리가 좋지 않아 11수를 한 진우의 배달 루트를 찾을 수 있게 도와주자.

Input
첫째 줄에 배달해야 할 주택의 수 N이 주어진다.
둘째 줄부터 (N-1)개의 줄에 걸쳐 도로 N-1개가 a b의 형태로 하나씩 주어진다.
a b는 a번과 b번 주택을 연결하는 도로가 있다는 것을 의미한다.

Output
만족하는 배달 루트가 있다면, 첫째 줄부터 N개의 줄에 걸쳐 
주택의 번호를 진우가 먼저 배달해야 하는 순서대로 출력한다.
첫째 줄에는 1, 마지막 줄에는 N을 출력해야 한다.
만족하는 배달 루트가 없다면, 첫째 줄에 "BRAK"을 출력한다.
 
Restrictions
N은 500,000 이하 2 이상 자연수

Example
------------
12
1 7
7 8
7 11
7 2
2 4
4 10
2 5
5 9
2 6
3 6
3 12
------------
1
11
8
7
4
10
2
9
5
6
3
12
------------
------------
15
1 14
14 7
7 8
7 11
7 2
2 4
4 10
2 5
5 9
2 6
3 6
3 15
11 12
8 13
-----------
BRAK
-----------

I-4. Taxis
Descriptions
새로 장만한 차를 자랑하고 싶었던 광수는 대학원에서 도망쳐 석진이네 집으로 놀러가려 한다.
대학원에서 석진이네 집까지 거리는 D (km) 이고, 
가는 길 중간에 광수의 차를 모아놓는 차고가 대학원에서 M (km) 떨어져 있다.
차고에는 자동차가 N대 주차되어 있는데, 이들은 모두 자율 주행 자동차라서
연료가 남아 있는 한 내가 호출한 위치까지 자동으로 와서 광수를 태울 수 있다.
  
지도교수한테 잡히지 않기 위해, 무조건 걷지 않고 차들만을 사용해 목적지로 가려고 한다.
다만, 모든 차량은 한 번 충전으로 주행할 수 있는 최대 거리가 정해져 있으며, 
이는 차고에서 출발하고 차가 이동하는 모든 동선을 포함한다.
차가 방전되면 내려서 다른 차를 불러야 하며, 꼭 방전되지 않아도 도중 하차할 수 있다.

차고의 위치와 차량 각각의 주행거리, 목적지가 주어졌을 때
광수가 목적지에 도달하는 데 필요한 최소한의 차량 수를 구해보자.   

Input
첫째 줄에 목적지까지 거리 D, 차고까지 거리 M, 차량의 수 N이 주어진다.
둘째 줄에 N개의 차량 각각의 최대 주행거리가 공백을 간격으로 주어진다.

Output
첫째 줄에 목적지에 도달하는 데 필요한 최소한의 차량의 수를 출력한다.
만약 목적지에 도달할 수 없다면, 대학원에 남아 있을 것이므로 0을 출력한다.

Restrictions
D, M, 모든 최대 주행거리는 10^18 이하 자연수
N은 500,000 이하 자연수

Example
--------------------
42 23 6
20 25 14 27 30 7
--------------------
4                             -- 4번(+27-23) -- 5번(+30-19) -- 1번(+20-8) -- 2번(+19-4)
--------------------

I-5. Take-out
Descriptions
호구와트 마법학교 아이들이 당신에게 재미있는 퍼즐을 선물했다.
처음에는 얼음과 불 블럭 총 N개가 일렬로 나열되어 있는 막대 한 개가 주어진다. 
막대의 각 블럭에는 차례대로 1부터 N까지의 숫자가 새겨져 있다. 
얼음 블럭의 개수는 정확히 불 블럭의 개수의 K배이다. 

불과 얼음이 다닥다닥 붙어 있는데 신기하게도 얼음이 녹거나 불이 꺼지지 않는다.
대신 매 턴마다 막대 '하나'에 남아있는 불 하나와 얼음 K개를 선택해야 하며,
선택이 끝난 즉시 불 블럭이 선택한 얼음을 모두 녹이면서 총 K+1개의 블럭이 사라지게 된다.
블럭들이 사라지게 되면 막대는 더 작은 막대 퍼즐 여러개로 나누어질 수 있다.  
이 과정을 반복하면서 모든 블럭이 사라지게 만들어 보자.

Input
첫째 줄에 막대의 길이와 조건을 나타내는 수 N과 K가 주어진다. 
둘째 줄에 막대 퍼즐이 c와 b로만 되어있는 길이 N의 문자열 형태로 주어진다.
문자 c와 b는 각각 '불 블럭', '얼음 블럭'에 해당한다.    
모든 입력에서 항상 퍼즐을 해결할 수 있다는 것이 보장된다.

Output
첫째 줄부터 N/(K+1)개의 줄에 걸쳐 
각 턴에서 제거해야 할 K+1개 블럭의 번호를 공백을 간격으로, 오름차순으로 출력한다.
 
Restrictions
N은 1,000,000 이하 2 이상의 자연수이자 K+1의 배수

Example
-----------------
12 2
ccbcbbbbbbcb
-----------------
1 8 12                   xcbcbbbxbbcx  -  cbcbbb bbc
2 6 7                     xbcbxx bbc - bcb bbc
3 4 5                     xxx bbc - bbc
9 10 11                 xxx - clear
-----------------

II-1. Inspector
Descriptions
방송을 하는 오낑은 화장실을 갔다 온 사이 녹화영상 하나가 사라져 있다는 것을 발견했다.
집에는 오낑을 제외하고 합동방송을 하기로 한 게스트와 매니저들만이 남아 있었다.
즉, 범인은 아직 이 곳에 있다.
모든 사람들의 진술을 들어 정리한 결과, 이들 중 N명이 오낑이 화장실을 갔을 때 
그의 작업실에 각자 단 '한 번'씩 들어간 적 있다는 사실을 알아낼 수 있었다.

용의자들은 대부분 마땅한 알리바이가 없었기 때문에
오낑은 간단하게 '작업실에 있을 때, 몇 명이 같이 있었는가?'는 형식의 질문만 하기로 했다.
용의자들은 질문에 항상 다음과 같이 대답해야 한다.
'저는 시간이 t일때 작업실에 있었고, 그때 저를 제외하고 k명이 작업실에 같이 있었다.'

이들의 진술을 모두 추합하면서, 누가 거짓말을 했는지 알아보려고 한다.
오낑을 도와 첫 진술부터 몇 번째 진술에서 '모두 참인 것이 불가능한지' 찾아보자.
 
Input
첫째 줄에 테스트케이스의 수 T가 주어진다.
각 테스트케이스의 첫 줄에는 용의자의 수 N과 진술의 수 M이 주어진다.
그 뒤, M개의 줄에 걸쳐 용의자들의 진술이 t a k 형식으로 하나씩 주어진다.
이는 용의자 a가 시각 t에 작업실에 있었고, 그때 k명이 함께 있었다는 것을 의미한다.

Output
각 테스트케이스마다 한 줄씩 정답을, 즉 1번 진술부터 차례대로 논리에 추가했을 때 
k번째 진술까지는 모두 참이 되는 것이 가능하지만 k+1번째 진술을 추가할 때 모순이 되는 k를 출력한다. 
진술이 모두 참이라면 M을 출력한다.

Restrictions
T는 50이하 자연수
N과 M은 100,000이하 자연수
모든 진술에서 t는 M이하 자연수

Example
-----------
2
3 5
1 1 1
1 2 1
2 3 1
4 1 1
4 2 1
3 3
3 3 0
2 2 0
1 1 0
-----------
4                - 4번째 진술까지 모두 참일 때 시각 1에는 1과 2, 시각 2~4에는 1과 3 // 5번째 진술과 말이 다르다. 
3                - 모든 진술이 참일 수 있음
-----------

II-2. Triumphal arch
Descriptions

Input
Output
Restrictions
Example

II-3. Tales of seafearing
Descriptions
광수는 새 차를 장만한지 한 달이나 지났지만 아직도 다른 사람들의 차와 비교하고 다닌다.
특히 광수의 절친 석진이는 그의 차에 대한 일화를 밥 먹듯이 듣곤 한다.
그의 일화는 "내 차는 말이야! 서울에서 딱 세 시간 몰았는데 부산 톨게이트였어! 진짜라니까?"
처럼 석진이에겐 말 같지도 않은 소리들이 대부분이다.

하루는 석진이 광수가 얘기했던 일화들을 싹 모아서 이것들이 사실인지 아닌지 실험해 봤다.
광수의 차를 몰래 타 한 시간마다 어디까지 갈 수 있는지
전국 방방곡곡을 돌아다니면서 체크했고, 그 결과 간단한 지도를 만들어 낼 수 있었다.

지도는 N개의 도시 위치를 표시한 정점과 도시들 사이를 잇는 M개의 양방향 간선으로 되어 있다.
광수의 차가 간선 하나를 통과하는 데는 정확히 한 시간이 걸린다.
지도가 완벽하지 않기 때문에 어떤 도시와 도시 사이의 경로가 존재하지 않을 수도 있다.

모든 일화는 'A에서 차를 C시간 몰았는데 B를 지나고 있었다'의 형식으로 주어진다.
석진이가 만든 지도와 광수의 일화들이 주어졌을 때, 지도만을 이용해 
A에서 C시간동안 쉬지 않고 차를 몰면 B에 정확히 도착하는 것이 가능한지 구해보자.

Input
첫째 줄에 도시의 수 N, 간선의 수 M, 일화의 수 K가 주어진다.
둘째 줄부터 M개의 줄에 걸쳐 간선의 정보가 a b의 형태로 주어진다.
이는 도시 a와 b를 잇는 간선이 존재한다는 것을 의미한다.
그 다음부터 K개의 줄에 걸쳐 일화의 정보가 A B C의 형태로 주어진다.
이는 'A에서 간선을 따라 C번 이동했을 때 정확히 B에 있었다'는 것을 의미한다.

Output
첫째 줄부터 K개의 줄에 걸쳐 각 진술이 사실이면 'TAK'를, 아니면 'NIE'를 하나씩 출력한다.

Restrictions
N은 5,000 이하 2 이상 자연수
M은 5,000 이하 자연수
K는 1,000,000 이하 자연수

Example
----------
8 7 4
1 2
2 3
3 4
5 6
6 7
7 8
8 5
2 3 1
1 4 1
5 5 8
1 8 10
----------
TAK         
NIE           
TAK          - 5번 정점에서 8시간 이동해서 정확히 5번으로 되돌아 올 수 있다.
NIE           - 1번과 8번 정점을 잇는 경로가 존재하지 않는다.
----------

III-1. Bytecomputer
Descriptions
심심해서 할 게 없었던 엡실론은 하나도 재미 없는 프로그램을 하나 만들었다.
그가 만든 '수열 변환기'라는 프로그램은 인접한 두 수를 고르면 뒷자리에 앞의 숫자를 더해준다.
예를 들어, {2 3 4 5}에서 3과 4를 고르게 되면 수열이 {2 3 7 5}로 바뀌게 된다.

"미안한데 그거 진짜 왜 만드는거야? 재미도 없고.. 감동도 없고.."

그래서 고민한 엡실론은 이것을 가지고 시한폭탄을 하나 만들었다.
처음에 길이 N이고 모든 항이 -1, 0, 1으로 이루어져 있는 수열이 주어진다. 
수열은 반드시 수열 변환기로만 바꿀 수 있고, 
수열을 '비내림차순'으로 만들면 폭탄의 타이머가 꺼진다.
비내림차순 수열은 항상 수열 뒤에 있는 숫자가 앞에 있는 숫자보다 크거나 같은 경우를 말한다. 
이제 좀 재미있어졌나? 시한폭탄을 끌 수 있는 최소한의 변환 횟수를 구해보자.

Input
첫째 줄에 수열의 길이 N이 주어진다.
둘째 줄에 공백을 간격으로 수열의 숫자 N개가 공백을 간격으로 주어진다. 

Output
첫째 줄에 시한폭탄을 끌 수 있는 수열 변환의 최소 횟수를 출력한다.
만약 수열을 비내림차순으로 만드는 것이 불가능하다면, 'BRAK'을 출력한다.

Restrictions
N은 1,000,000 이하 자연수

Example
----------------
-6
-1 1 0 -1 0 1
----------------
3                        : 세 번 만에 { -1, -1, -1, -1, 0, 1 }로 만들 수 있다.
----------------

III-2. Maze
Descriptions
Input
Output
Restrictions
Example
III-3. Colorful Chain
Descriptions
Input
Output
Restrictions
Example
III-4. Polarization
Descriptions
Input
Output
Restrictions
Example
























글로벌 프론티어 문제풀기
머신러닝 책 읽기
  
커밋할거
머신러닝 프밍과제 인증 - 하나씩 뜯어먹을 수 있음
